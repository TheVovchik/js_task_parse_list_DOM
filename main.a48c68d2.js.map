{"version":3,"sources":["scripts/main.js"],"names":["allWorkers","document","querySelectorAll","workerData","map","worker","name","innerText","salary","dataset","position","age","sortedData","sortList","list","listToSort","sort","personA","personB","fromDollars","replace","forEach","index"],"mappings":";AAAA,aA+BC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA7BD,IAAMA,EAAiBC,EAAAA,SAASC,iBAAiB,OAE3CC,EAAaH,EAAWI,IAAI,SAACC,GAAY,MAAA,CAC7CC,KAAMD,EAAOE,UACbC,OAAQH,EAAOI,QAAQD,OACvBE,SAAUL,EAAOI,QAAQC,SACzBC,IAAKN,EAAOI,QAAQE,OAGhBC,EAAaC,EAASV,GAS5B,SAASU,EAASC,GAGTC,OAFgBD,EAAAA,GAGpBE,KAAK,SAACC,EAASC,GACdC,OAAAA,EAAYD,EAAQV,QAAUW,EAAYF,EAAQT,UAIxD,SAASW,EAAYX,GACZ,OAACA,EAAOY,QAAQ,QAAS,IAjBlCpB,EAAWqB,QAAQ,SAAChB,EAAQiB,GAC1BjB,EAAOE,UAAYK,EAAWU,GAAOhB,KACrCD,EAAOI,QAAQC,SAAWE,EAAWU,GAAOZ,SAC5CL,EAAOI,QAAQD,OAASI,EAAWU,GAAOd,OAC1CH,EAAOI,QAAQE,IAAMC,EAAWU,GAAOX","file":"main.a48c68d2.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst allWorkers = [...document.querySelectorAll('li')];\n\nconst workerData = allWorkers.map((worker) => ({\n  name: worker.innerText,\n  salary: worker.dataset.salary,\n  position: worker.dataset.position,\n  age: worker.dataset.age,\n}));\n\nconst sortedData = sortList(workerData);\n\nallWorkers.forEach((worker, index) => {\n  worker.innerText = sortedData[index].name;\n  worker.dataset.position = sortedData[index].position;\n  worker.dataset.salary = sortedData[index].salary;\n  worker.dataset.age = sortedData[index].age;\n});\n\nfunction sortList(list) {\n  const listToSort = [...list];\n\n  return listToSort\n    .sort((personA, personB) => (\n      fromDollars(personB.salary) - fromDollars(personA.salary)\n    ));\n}\n\nfunction fromDollars(salary) {\n  return +salary.replace(/[$,]/g, '');\n}\n"]}